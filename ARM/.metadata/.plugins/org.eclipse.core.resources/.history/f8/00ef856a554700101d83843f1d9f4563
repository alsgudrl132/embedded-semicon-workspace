#include <stdint.h>

#define RCC_CR_HSEON	(1 << 16)	// HSE 오실레이터 ON 비트
#define RCC_CR_HSERDY	(1 << 17)	// HSE Ready 플래그
#define RCC_CR_PLLON	(1 << 24)	// PLL 오실레이터 ON 비트
#define RCC_CR_PLLRDY	(1 << 25)	// PLL Ready 플래그

#define RCC_PLLCFGR_PLLM_Pos	0	// PLLM 위치
#define RCC_PLLCFGR_PLLN_Pos	6	// PLLN 위치
#define RCC_PLLCFGR_PLLP_Pos	16  // PLLP 위치
#define RCC_PLLCFGR_PLLSRC_Pos	22	// PLLSRC 위치

#define FLASH_ACR_LATENCY_Pos	0
#define FLASH_ACR_LATENCY_3WS	(3 << FLASH_ACR_LATENCY_Pos) // 3 wait state

#define RCC_CFGR_SW_Pos			0 	// 시스템클럭 소스 선택 스위치
#define RCC_CFGR_SW_PLL			(2 << RCC_CFGR_SW_Pos)	// PLL 선택
#define RCC_CFGR_HPRE_Pos		4	// AHB 프리스케일러
#define RCC_CFGR_PPRE1_Pos		10	// APB1 프리스케일러
#define RCC_CFGR_PPRE2_Pos		13	// APB2 프리스케일러
#define RCC_AHB1ENR_GPIOAEN		(1 << 0)	//GPIOA 클럭 활성화 비트

#define GPIOA_MODER_MODER5		(1 << (5 * 2))	// GPIOA 출력모드로 설정
#define GPIOA_ODR_ODR5			(1 << 5)		// PA5 출력 데이터 세트

#define RCC_BASE	0x40023800		// RCC의 기본주소
#define FLASH_BASE	0x40023C00		// Flash의 기본주소
#define GPIOA_BASE	0x40020000		// GPIOA의 기본주소

#define RCC_CR		(*(volatile uint32_t *)(RCC_BASE + 0x00))
#define RCC_PLLCFGR	(*(volatile uint32_t *)(RCC_BASE + 0x04))
#define RCC_CFGR	(*(volatile uint32_t *)(RCC_BASE + 0x08))
#define FLASH_ACR	(*(volatile uint32_t *)(FLASH_BASE + 0x00))
#define GPIOA_MODER (*(volatile uint32_t *)(GPIOA_BASE + 0x00))
#define GPIOA_ODR   (*(volatile uint32_t *)(FLASH_BASE + 0x14))

#define RCC_AHB1ENR (*(volatile uint32_t *)(RCC_BASE + 0x30))

void Systemclock_Config(void)
{
	/* HSE 클럭 활성화 */
	RCC_CR |= RCC_CR_HSEON;				// HSE ON
	while(!(RCC_CR & RCC_CR_HSERDY));	// HSE 안정화 대기

	// PLL 설정
	RCC_PLLCFGR = (4 << RCC_PLLCFGR_PLLM_Pos) |
				  (200 << RCC_PLLCFGR_PLLN_Pos) |
				  (0x1 << RCC_PLLCFGR_PLLP_Pos) |
				  (1 << RCC_PLLCFGR_PLLSRC_Pos);

	RCC_CR |= RCC_CR_PLLON;
	while(!(RCC_CR & RCC_CR_PLLRDY));

	RCC_CFGR |= (0 << RCC_CFGR_HPRE_Pos);
	RCC_CFGR |= (5 << RCC_CFGR_PPRE1_Pos);
	RCC_CFGR |= (4 << RCC_CFGR_PPRE2_Pos);

	FLASH_ACR |= FLASH_ACR_LATENCY_3WS;

	RCC_CFGR |= RCC_CFGR_SW_PLL;
	while((RCC_CFGR & RCC_CFGR_SW_PLL) != RCC_CFGR_SW_PLL);

}
